simulation 
import BooleanLogic;
import FMI2;
import FMI2Component;
import Logger;
import Math;
{
 	int FMI_STATUS_OK = 0;
	int FMI_STATUS_WARNING = 1;
	int FMI_STATUS_DISCARD = 2;
	int FMI_STATUS_ERROR = 3;
	int FMI_STATUS_FATAL = 4;
	int FMI_STATUS_PENDING = 5;
	int status = 0;
	Math math = load("Math");
	Logger logger = load("Logger");
	FMI2 tankcontroller = load("FMI2", "{8c4e810f-3df3-4a00-8276-176fa3c9f000}", "src/test/resources/watertankcontroller-c.fmu");
	FMI2 SingleWatertank = load("FMI2", "{cfc65592-9ece-4563-9705-1581b6e7071c}", "src/test/resources/singlewatertank-20sim.fmu");
	FMI2Component crtlInstance = tankcontroller.instantiate("crtlInstance", false, false);
	FMI2Component wtInstance = SingleWatertank.instantiate("wtInstance", false, false);
	FMI2Component components[2] = { wtInstance , crtlInstance };
	real START_TIME = 10.0;
	real END_TIME = 10.0;
	bool global_execution_continue = true;
	int FMI_OK = 0;
	int FMI_WARNING = 1;
	int FMI_DISCARD = 2;
	int FMI_ERROR = 3;
	int FMI_FATAL = 4;
	int FMI_PENDING = 5;
	BooleanLogic booleanLogic;
	try 
	{
		booleanLogic = load("BooleanLogic");
		if( (booleanLogic == null) )
		{
				error "Failed load of: booleanLogic";
		}
		real wtinstanceRealShare[1];
		bool crtlinstanceBoolShare[1];
		bool crtlinstanceBoolIo[4];
		real crtlinstanceRealIo[4];
		uint crtlinstanceUintVref[4];
		real wtinstanceRealIo[22];
		uint wtinstanceUintVref[22];
		real fixed_end_time = 0.0;
		fixed_end_time = END_TIME;
		real absoluteTolerance = 0.1;
		real relativeTolerance = 0.1;
		int maxConvergeAttempts = 5;
		status = wtInstance.setupExperiment(true, 0.1, START_TIME, true, END_TIME);
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "SetupExperiment failed on '%s' with status: FMI_ERROR", wtInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "SetupExperiment failed on '%s' with status: FMI_FATAL", wtInstance);
				}
				error "Failed to 'setupExperiment' on 'wtInstance'";
		}
		status = crtlInstance.setupExperiment(true, 0.1, START_TIME, true, END_TIME);
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "SetupExperiment failed on '%s' with status: FMI_ERROR", crtlInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "SetupExperiment failed on '%s' with status: FMI_FATAL", crtlInstance);
				}
				error "Failed to 'setupExperiment' on 'crtlInstance'";
		}
		wtinstanceUintVref[0] = 0;
		wtinstanceRealIo[0] = 9.0;
		status = wtInstance.setReal(wtinstanceUintVref, 1, wtinstanceRealIo);
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_ERROR", wtInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_FATAL", wtInstance);
				}
				error "Failed to 'setReal' on 'wtInstance'";
		}
		wtinstanceUintVref[0] = 1;
		wtinstanceRealIo[0] = 1.0;
		status = wtInstance.setReal(wtinstanceUintVref, 1, wtinstanceRealIo);
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_ERROR", wtInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_FATAL", wtInstance);
				}
				error "Failed to 'setReal' on 'wtInstance'";
		}
		wtinstanceUintVref[0] = 2;
		wtinstanceRealIo[0] = 1.0;
		status = wtInstance.setReal(wtinstanceUintVref, 1, wtinstanceRealIo);
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_ERROR", wtInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_FATAL", wtInstance);
				}
				error "Failed to 'setReal' on 'wtInstance'";
		}
		wtinstanceUintVref[0] = 3;
		wtinstanceRealIo[0] = 9.81;
		status = wtInstance.setReal(wtinstanceUintVref, 1, wtinstanceRealIo);
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_ERROR", wtInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_FATAL", wtInstance);
				}
				error "Failed to 'setReal' on 'wtInstance'";
		}
		wtinstanceUintVref[0] = 4;
		wtinstanceRealIo[0] = 1.0;
		status = wtInstance.setReal(wtinstanceUintVref, 1, wtinstanceRealIo);
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_ERROR", wtInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_FATAL", wtInstance);
				}
				error "Failed to 'setReal' on 'wtInstance'";
		}
		wtinstanceUintVref[0] = 5;
		wtinstanceRealIo[0] = 0.0;
		status = wtInstance.setReal(wtinstanceUintVref, 1, wtinstanceRealIo);
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_ERROR", wtInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_FATAL", wtInstance);
				}
				error "Failed to 'setReal' on 'wtInstance'";
		}
		wtinstanceUintVref[0] = 6;
		wtinstanceRealIo[0] = 0.0;
		status = wtInstance.setReal(wtinstanceUintVref, 1, wtinstanceRealIo);
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_ERROR", wtInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_FATAL", wtInstance);
				}
				error "Failed to 'setReal' on 'wtInstance'";
		}
		crtlinstanceUintVref[0] = 0;
		crtlinstanceRealIo[0] = 2.0;
		status = crtlInstance.setReal(crtlinstanceUintVref, 1, crtlinstanceRealIo);
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_ERROR", crtlInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_FATAL", crtlInstance);
				}
				error "Failed to 'setReal' on 'crtlInstance'";
		}
		crtlinstanceUintVref[0] = 1;
		crtlinstanceRealIo[0] = 1.0;
		status = crtlInstance.setReal(crtlinstanceUintVref, 1, crtlinstanceRealIo);
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_ERROR", crtlInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "SetReal failed on '%s' with status: FMI_FATAL", crtlInstance);
				}
				error "Failed to 'setReal' on 'crtlInstance'";
		}
		status = wtInstance.enterInitializationMode();
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "EnterInitializationMode failed on '%s' with status: FMI_ERROR", wtInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "EnterInitializationMode failed on '%s' with status: FMI_FATAL", wtInstance);
				}
				error "Failed to 'enterInitializationMode' on 'wtInstance'";
		}
		status = crtlInstance.enterInitializationMode();
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "EnterInitializationMode failed on '%s' with status: FMI_ERROR", crtlInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "EnterInitializationMode failed on '%s' with status: FMI_FATAL", crtlInstance);
				}
				error "Failed to 'enterInitializationMode' on 'crtlInstance'";
		}
		int stabilisation_loop = 5;
		while( (stabilisation_loop > 0) )
		{
			crtlinstanceUintVref[0] = 4;
			status = crtlInstance.getBoolean(crtlinstanceUintVref, 1, crtlinstanceBoolIo);
			if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
			{
					if( (status == FMI_ERROR) )
					{
							logger.log(4, "GetBoolean failed on '%s' with status: FMI_ERROR", crtlInstance);
					}
					if( (status == FMI_FATAL) )
					{
							logger.log(4, "GetBoolean failed on '%s' with status: FMI_FATAL", crtlInstance);
					}
					error "Failed to 'getBoolean' on 'crtlInstance'";
			}
			crtlinstanceBoolShare[0] = crtlinstanceBoolIo[0];
			wtinstanceUintVref[0] = 16;
			if( (crtlinstanceBoolShare[0]) )
			{
					wtinstanceRealIo[0] = 1.0;
			}
			else
			{
					wtinstanceRealIo[0] = 0.0;
			}
			status = wtInstance.setReal(wtinstanceUintVref, 1, wtinstanceRealIo);
			if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
			{
					if( (status == FMI_ERROR) )
					{
							logger.log(4, "SetReal failed on '%s' with status: FMI_ERROR", wtInstance);
					}
					if( (status == FMI_FATAL) )
					{
							logger.log(4, "SetReal failed on '%s' with status: FMI_FATAL", wtInstance);
					}
					error "Failed to 'setReal' on 'wtInstance'";
			}
			wtinstanceUintVref[0] = 17;
			status = wtInstance.getReal(wtinstanceUintVref, 1, wtinstanceRealIo);
			if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
			{
					if( (status == FMI_ERROR) )
					{
							logger.log(4, "GetReal failed on '%s' with status: FMI_ERROR", wtInstance);
					}
					if( (status == FMI_FATAL) )
					{
							logger.log(4, "GetReal failed on '%s' with status: FMI_FATAL", wtInstance);
					}
					error "Failed to 'getReal' on 'wtInstance'";
			}
			wtinstanceRealShare[0] = wtinstanceRealIo[0];
			crtlinstanceUintVref[0] = 3;
			crtlinstanceRealIo[0] = wtinstanceRealShare[0];
			status = crtlInstance.setReal(crtlinstanceUintVref, 1, crtlinstanceRealIo);
			if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
			{
					if( (status == FMI_ERROR) )
					{
							logger.log(4, "SetReal failed on '%s' with status: FMI_ERROR", crtlInstance);
					}
					if( (status == FMI_FATAL) )
					{
							logger.log(4, "SetReal failed on '%s' with status: FMI_FATAL", crtlInstance);
					}
					error "Failed to 'setReal' on 'crtlInstance'";
			}
			stabilisation_loop = stabilisation_loop - 1;
		}
		status = wtInstance.exitInitializationMode();
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "ExitInitializationMode failed on '%s' with status: FMI_ERROR", wtInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "ExitInitializationMode failed on '%s' with status: FMI_FATAL", wtInstance);
				}
				error "Failed to 'exitInitializationMode' on 'wtInstance'";
		}
		status = crtlInstance.exitInitializationMode();
		if( ((status == FMI_ERROR) || (status == FMI_FATAL)) )
		{
				if( (status == FMI_ERROR) )
				{
						logger.log(4, "ExitInitializationMode failed on '%s' with status: FMI_ERROR", crtlInstance);
				}
				if( (status == FMI_FATAL) )
				{
						logger.log(4, "ExitInitializationMode failed on '%s' with status: FMI_FATAL", crtlInstance);
				}
				error "Failed to 'exitInitializationMode' on 'crtlInstance'";
		}
	}	finally 
	{
		if( (booleanLogic != null) )
		{
				unload(booleanLogic);
				booleanLogic = null;
		}
	}
	unload(tankcontroller);
	unload(SingleWatertank);
	unload(math);
	unload(logger);
}